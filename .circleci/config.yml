# Use the latest 2.1 version of CircleCI pipeline process engine.
# See: https://circleci.com/docs/2.0/configuration-reference
version: 2.1

# Define a job to be invoked later in a workflow.
# See: https://circleci.com/docs/2.0/configuration-reference/#jobs
jobs:
  build-and-test-x86:
    # Specify the execution environment. You can specify an image from Dockerhub or use one of our Convenience Images from CircleCI's Developer Hub.
    # See: https://circleci.com/docs/2.0/configuration-reference/#docker-machine-macos-windows-executor
    machine:
      image: ubuntu-2204:current
      docker_layer_caching: true
    resource_class: large
    environment:
      DEBIAN_FRONTEND: noninteractive
    steps:
      # setup bazel
      - run: wget https://github.com/bazelbuild/bazel/releases/download/6.3.2/bazel-6.3.2-linux-x86_64
      - run: chmod +x bazel-6.3.2-linux-x86_64
      - run: sudo mv bazel-6.3.2-linux-x86_64 /usr/bin/bazel

      - checkout

      - run:
          name: Build x86_64
          command: bazel build -s //...
      - run:
          name: Test
          command: bazel test //... --test_output=all

      - store_artifacts:
          path: /tmp/bin/infector/infect_ubuntu_jammy_text_padding_entry_point/infection_result.txt
      - store_artifacts:
          path: /tmp/bin/infector/infect_ubuntu_jammy_reverse_text_entry_point/infection_result.txt
      - store_artifacts:
          path: /tmp/bin/infector/infect_ubuntu_jammy_pt_note_entry_point/infection_result.txt
      - store_artifacts:
          path: /tmp/bin/infector/infect_ubuntu_jammy_text_padding_libc_main_start/infection_result.txt
      - store_artifacts:
          path: /tmp/bin/infector/infect_ubuntu_jammy_reverse_text_libc_main_start/infection_result.txt
      - store_artifacts:
          path: /tmp/bin/infector/infect_ubuntu_jammy_pt_note_libc_main_start/infection_result.txt

      - store_artifacts:
          path: /tmp/bin/infector/infect_ubuntu_focal_text_padding_entry_point/infection_result.txt
      - store_artifacts:
          path: /tmp/bin/infector/infect_ubuntu_focal_reverse_text_entry_point/infection_result.txt
      - store_artifacts:
          path: /tmp/bin/infector/infect_ubuntu_focal_pt_note_entry_point/infection_result.txt
      - store_artifacts:
          path: /tmp/bin/infector/infect_ubuntu_focal_text_padding_libc_main_start/infection_result.txt
      - store_artifacts:
          path: /tmp/bin/infector/infect_ubuntu_focal_reverse_text_libc_main_start/infection_result.txt
      - store_artifacts:
          path: /tmp/bin/infector/infect_ubuntu_focal_pt_note_libc_main_start/infection_result.txt

      - store_artifacts:
          path: /tmp/bin/infector/infect_ubuntu_bionic_text_padding_entry_point/infection_result.txt
      - store_artifacts:
          path: /tmp/bin/infector/infect_ubuntu_bionic_reverse_text_entry_point/infection_result.txt
      - store_artifacts:
          path: /tmp/bin/infector/infect_ubuntu_bionic_pt_note_entry_point/infection_result.txt
      - store_artifacts:
          path: /tmp/bin/infector/infect_ubuntu_bionic_text_padding_libc_main_start/infection_result.txt
      - store_artifacts:
          path: /tmp/bin/infector/infect_ubuntu_bionic_reverse_text_libc_main_start/infection_result.txt
      - store_artifacts:
          path: /tmp/bin/infector/infect_ubuntu_bionic_pt_note_libc_main_start/infection_result.txt

  build-and-test-aarch64:
    machine:
      image: ubuntu-2204:current
      docker_layer_caching: true
    resource_class: arm.large
    environment:
      DEBIAN_FRONTEND: noninteractive
    steps:
      # setup bazel
      - run: wget https://github.com/bazelbuild/bazel/releases/download/6.3.2/bazel-6.3.2-linux-arm64
      - run: chmod +x bazel-6.3.2-linux-arm64
      - run: sudo mv bazel-6.3.2-linux-arm64 /usr/bin/bazel

      - checkout

      - run:
          name: Build aarch64
          command: bazel build -s //...
      - run:
          name: Test
          command: bazel test //... --test_output=all

      - store_artifacts:
          path: /tmp/bin/infector/infect_ubuntu_jammy_text_padding_entry_point/infection_result.txt
      - store_artifacts:
          path: /tmp/bin/infector/infect_ubuntu_jammy_reverse_text_entry_point/infection_result.txt
      - store_artifacts:
          path: /tmp/bin/infector/infect_ubuntu_jammy_pt_note_entry_point/infection_result.txt
      - store_artifacts:
          path: /tmp/bin/infector/infect_ubuntu_jammy_text_padding_libc_main_start/infection_result.txt
      - store_artifacts:
          path: /tmp/bin/infector/infect_ubuntu_jammy_reverse_text_libc_main_start/infection_result.txt
      - store_artifacts:
          path: /tmp/bin/infector/infect_ubuntu_jammy_pt_note_libc_main_start/infection_result.txt

      - store_artifacts:
          path: /tmp/bin/infector/infect_ubuntu_focal_text_padding_entry_point/infection_result.txt
      - store_artifacts:
          path: /tmp/bin/infector/infect_ubuntu_focal_reverse_text_entry_point/infection_result.txt
      - store_artifacts:
          path: /tmp/bin/infector/infect_ubuntu_focal_pt_note_entry_point/infection_result.txt
      - store_artifacts:
          path: /tmp/bin/infector/infect_ubuntu_focal_text_padding_libc_main_start/infection_result.txt
      - store_artifacts:
          path: /tmp/bin/infector/infect_ubuntu_focal_reverse_text_libc_main_start/infection_result.txt
      - store_artifacts:
          path: /tmp/bin/infector/infect_ubuntu_focal_pt_note_libc_main_start/infection_result.txt

      - store_artifacts:
          path: /tmp/bin/infector/infect_ubuntu_bionic_text_padding_entry_point/infection_result.txt
      - store_artifacts:
          path: /tmp/bin/infector/infect_ubuntu_bionic_reverse_text_entry_point/infection_result.txt
      - store_artifacts:
          path: /tmp/bin/infector/infect_ubuntu_bionic_pt_note_entry_point/infection_result.txt
      - store_artifacts:
          path: /tmp/bin/infector/infect_ubuntu_bionic_text_padding_libc_main_start/infection_result.txt
      - store_artifacts:
          path: /tmp/bin/infector/infect_ubuntu_bionic_reverse_text_libc_main_start/infection_result.txt
      - store_artifacts:
          path: /tmp/bin/infector/infect_ubuntu_bionic_pt_note_libc_main_start/infection_result.txt

# Invoke jobs via workflows
# See: https://circleci.com/docs/2.0/configuration-reference/#workflows
workflows:
  main-workflow:
    jobs:
      - build-and-test-x86
      - build-and-test-aarch64
